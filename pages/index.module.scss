@import '../styles/variables.scss';

.heroContainer {
  background-color: var(--off-white);
  display: flex;
  align-items: center;
  width: 100vw;
  height: 100vh;
}

.three {
  position: absolute;
  z-index: 2;
  @media only screen and (max-width: $breakpoint-sm) {
    width: 100vw;
    height: 80vh;
  }
  @media only screen and (min-width: $breakpoint-sm) {
    width: 100vw;
    height: 60vh;
  }
  @media only screen and (min-width: $breakpoint-md) {
    width: 160vw;
    height: 80vh;
  }
  @media only screen and (min-width: $breakpoint-lg) {
    width: 160vw;
    height: 80vh;
  }
  @media only screen and (min-width: $breakpoint-xl) {
    width: 160vw;
    height: 80vh;
  }
  // background: linear-gradient(to bottom, var(--accent-color) 0%, var(--off-white) 100%);
}

.threegradient {
  position: absolute;
  z-index: 4;
  @media only screen and (max-width: $breakpoint-sm) {
    width: 100vw;
    height: 80vh;
  }
  @media only screen and (min-width: $breakpoint-sm) {
    width: 100vw;
    height: 60vh;
  }
  @media only screen and (min-width: $breakpoint-md) {
    width: 160vw;
    height: 80vh;
  }
  @media only screen and (min-width: $breakpoint-lg) {
    width: 160vw;
    height: 80vh;
  }
  @media only screen and (min-width: $breakpoint-xl) {
    width: 160vw;
    height: 80vh;
  }
  background: linear-gradient(
    to bottom,
    var(--off-white) 0%,
    var(--gradient-color) 50%,
    var(--off-white) 100%
  );
}

.name {
  font-size: 20px;
  line-height: 1;
  margin-bottom: 20px;
  position: flex;
  z-index: 1;
  @media only screen and (min-width: $breakpoint-sm) {
    font-size: 24px;
    margin-bottom: 24px;
  }
  @media only screen and (min-width: $breakpoint-md) {
    margin-bottom: 32px;
  }
  span {
    display: block;
    word-wrap: normal;
    overflow: hidden;
    & > span {
      opacity: 0;
    }
  }
}

.subTitle {
  position: relative;
  z-index: 1;
  display: flex;
  justify-content: center;
  overflow: hidden;

  div::before {
    position: absolute;
    top: 0;
    left: 0;
    content: attr(data-char);
    transform: translateY(-103%);
  }
  div {
    display: inline-block;
    letter-spacing: -0.3vw;
  }

  span {
    display: flex;
    overflow: hidden;
    & > span {
      opacity: 1;
    }
  }
}

.heroLinkContainer {
  align-items: center;
  display: flex;
  justify-content: center;
  position: relative;
  z-index: 4;
  min-height: 120px;
  @media only screen and (min-width: $breakpoint-md) {
    min-height: unset;
  }
}

.clearallContainer {
  display: flex; /* 使用 Flexbox */
  justify-content: flex-end; /* 将内容推到右边 */
  align-items: center; /* 垂直对齐到底部 */
}

.clearButton {
  color: #e7e7e7;
  border: 1px solid #e7e7e7;
  border-radius: 10px;
  font-size: 24px;
  align-items: flex-end;
  padding: 10px 15px;
  cursor: pointer;
  background-color: transparent;
  transition: font-size 0.3s;

  &:hover {
    font-size: 30px;
    color: var(--off-white);
  }

  @media only screen and (max-width: $breakpoint-sm) {
    font-size: 14px;
    padding: 2px 3px;
    margin: 3px;
    border-radius: 4px;
  }
}

.selectedWorkContainer {
  background-color: var(--off-white);

  .projTitle {
    margin-bottom: 40px;
    @media only screen and (min-width: $breakpoint-md) {
      margin-bottom: 84px;
    }
  }
  .caseStudyCol {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    @media only screen and (min-width: $breakpoint-sm) {
    }
    @media only screen and (min-width: $breakpoint-md) {
    }
  }
}

.aboutCol {
  a {
    display: block;
    width: fit-content;
  }
}
