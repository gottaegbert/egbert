@import "../../styles/variables.scss";

/* swtich taken from W3 schools */
  
.planet {
        width: 1.8rem;
        height: 1.8rem;
        border-radius: 50%;
        overflow: hidden;
        background:
        radial-gradient(3.75em, 99%, transparent 100%);
        background-color: var(--bg-planet-bright);
        background-repeat: no-repeat;
        position: relative;
        will-change: background;
        transition: all 400ms ease;
        opacity: 0.6;
        /* Safari transition issue */
        backface-visibility: hidden;
        transform: translate3d(0, 0, 0);
        
        &::after {
          content: "";
          background-color: var(--bg-planet-shadow);
          width: 2rem;
          height: 2rem;
          position: absolute;
          border-radius: 50%;
          will-change: opacity, transform, background-color;
          opacity: 0;
          transform: translate(2em, -2em);
          transition: opacity 400ms ease, transform 400ms ease, background-color 400ms ease;
        }
      }

      .elements {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 1;
        transition: transform 400ms ease;
        translate: 7px 18.7px ;
        scale: 1.4;
        svg {
          position: absolute;
          width: 7px;
          height: 7px;
          opacity: 1;
          transition: transform 400ms ease, opacity 200ms ease, width 200ms ease, height 200ms ease;
          circle {
            fill: var(--bg-planet-bright);
            
            transition: fill 400ms ease;
          
          }
          &:first-child {
            transform: translate(1.8em, 0.35em);
          }
          &:nth-child(2) {
            transform: translate(2.8em, 0.7em);
          }
          &:nth-child(3) {
            transform: translate(3.2em, 1.8em);
          }
          &:nth-child(4) {
            transform: translate(2.8em, 2.8em);
          }
          &:nth-child(5) {
            transform: translate(1.8em, 3.2em);
          }
          &:nth-child(6) {
            transform: translate(0.7em, 2.8em);
          }
          &:nth-child(7) {
            transform: translate(0.35em, 1.8em);
          }
          &:nth-child(8) {
            transform: translate(0.7em, 0.7em);
          }
        }
      }
    
   .planet:hover {
        opacity: 1;
      }
  

    input:checked {
      &+.planet {
        --bg-planet-bright: #d7d8d8;

        &::after {
          opacity: 1;
          transform: translate(0.6em, -0.5em);
           translate: 8px 4px ;
        }
      }

      &~.elements {
        transform: rotate(180deg);
        translate: -42px -15px ;
        svg {
          &:first-child {
            transform: translate(2em, 1em);
            opacity: 0;
          }
          &:nth-child(2) {
            transform: translate(3em, 1.5em);
            opacity: 0;
          }
          &:nth-child(3) {
            transform: translate(3em, 2em);
            opacity: 0;
          }
          &:nth-child(4) {
            transform: translate(3em, 2em);
            opacity: 0;
          }
          &:nth-child(5) {
            transform: translate(1.9em, 2.6em);
            width: 0.3em;
            height: 0.3em;
            circle {
              fill: var(--bg-planet-lightshadow);
            }
          }
          &:nth-child(6) {
            transform: translate(1.4em, 2.5em);
            width: 0.3em;
            height: 0.3em;
            circle {
              fill: var(--bg-planet-lightshadow);
            }
          }
          &:nth-child(7) {
            transform: translate(1.1em, 1.6em);
            width: 0.7em;
            height: 0.7em;
            circle {
              fill: var(--bg-planet-lightshadow);
            }
          }
          &:nth-child(8) {
            width: 0.45em;
            height: 0.45em;
            transform: translate(1.7em, 2.1em);
            circle {
              fill: var(--bg-planet-lightshadow);
            }
          }
        }
      }
    }
.swithinfo {
  box-sizing: inherit;
  display: flex;
  align-items: center;
  -webkit-font-smoothing: antialiased;
   min-height: 100vh;
}
.switch {
  padding: 1rem;
  position: relative;
  -webkit-tap-highlight-color:  rgba(255, 255, 255, 0); 
  display: flex;
  // width: 100px;
  // height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

// .slider {
//   position: absolute;
//   cursor: pointer;
//   top: 0;
//   left: 0;
//   right: 0;
//   bottom: 0;
//   background-color: #fbfbfb;
//   -webkit-transition: 0.4s;
//   transition: 0.4s;
// }

// .slider:before {
//   position: absolute;
//   content: '';
//   height: 26px;
//   width: 26px;
//   left: 4px;
//   bottom: 4px;
//   background-color: rgb(208, 208, 208);
//   -webkit-transition: 0.4s;
//   transition: 0.4s;
// }

// input:checked + .slider {
//   background-color: var(--accent-color);
// }

// input:focus + .slider {
//   box-shadow: 0 0 8px var(--accent-color);
// }

// input:checked + .slider:before {
//   -webkit-transform: translateX(26px);
//   -ms-transform: translateX(26px);
//   transform: translateX(26px);
// }

// .slider {
//   border-radius: 34px;
// }

// .slider:before {
//   border-radius: 50%;
// }

.nav {
  background-color: var(--off-white-trans);
  backdrop-filter: blur(10px);
  height: $nav-h;
  width: 100%;
  max-width: $grid-max-width;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 $grid-margins;
  margin: auto;
  position: fixed;
  top: 0;
  left: 50%;
  z-index: 99;
  transform: translateX(-50%);
  @media only screen and (min-width: $breakpoint-sm) {
    height: $nav-h-sm;
    padding: 0 $grid-margins-sm;
  }
  @media only screen and (min-width: $breakpoint-md) {
    height: $nav-h-md;
    padding: 0 $grid-margins-md;
  }
  @media only screen and (min-width: $breakpoint-lg) {
    height: $nav-h-lg;
    padding: 0 $grid-margins-lg;
  }
  a {
    font-size: 16px;
    line-height: 1;
    text-decoration: none;
    transition: transition(color);
  }
}

.aboutLink {
  margin-left: auto;
}

.navLink {
  padding-left: 20px;
  @media only screen and (min-width: $breakpoint-md) {
    padding-left: 40px;
  }
}

.ddContainer {
  position: relative;
  padding: 20px 0;
  cursor: pointer;
  &:hover p {
    color: var(--accent-color);
    &:after {
      border-top: 5px solid var(--accent-color);
    }
  }
}

p.ddTitle {
  padding-left: 20px;
  line-height: 1;
  cursor: pointer;
  position: relative;
  padding-right: 20px;
  transition: transition(color);
  @media only screen and (min-width: $breakpoint-md) {
    padding-left: 40px;
  }
  &:hover {
    color: var(--accent-color);
    &:after {
      border-top: 5px solid var(--accent-color);
    }
  }
  &:after {
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 5px solid var(--black);
    content: "";
    height: 0;
    position: absolute;
    right: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    transition: transition(border-top);
    width: 0;
  }
}

.dropdown {
  visibility: hidden;
  opacity: 0;
  position: absolute;
  transition: all 0.5s ease;
  display: none;
  align-items: flex-start;
  background-color: var(--white);
  border: 1px solid var(--border);
  display: flex;
  flex-direction: column;

  padding: 0 30px 30px;
  position: absolute;
  top: calc(100% - 0.5rem);
  -webkit-transform: translateX(-50%);
  transform: translateX(-50%);
  transition: opacity 0.3s ease-out;
  visibility: hidden;
  width: 200px;
  z-index: 11;
  left: 10%;
  @media only screen and (min-width: $breakpoint-sm) {
    left: 15%;
  }

  @media only screen and (min-width: $breakpoint-md) {
    left: 30%;
  }
  @media only screen and (min-width: $breakpoint-lg) {
    left: 50%;
  }
  &:before {
    border-bottom: 8px solid var(--border);
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    content: "";
    height: 0;
    position: absolute;
    top: -8px;
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    width: 0;
    left: 70%;
    @media only screen and (min-width: $breakpoint-sm) {
      left: 68%;
    }
    @media only screen and (min-width: $breakpoint-md) {
      left: 68%;
    }
    @media only screen and (min-width: $breakpoint-lg) {
      left: 55%;
    }
  }
}
.ddContainer:hover > .dropdown,
.dropdown:hover {
  visibility: visible;
  opacity: 1;
  display: block;
}

.dropdown a {
  align-items: center;
  display: flex;
  margin-top: 30px;
  width: 100%;
  clear: both;

  img {
    height: 24px;
    margin-right: 15px;
    -o-object-fit: contain;
    object-fit: contain;
    width: 24px;
  }
}
